---
layout : post
title : [모의 SW 역량테스트] 보호 필름
comments : true
categories : 
- CodingTest
tags : [CodingTest, DFS]
---
# [모의 SW 역량테스트] 보호 필름

DFS 문제로 총 3가지 경우를 깊이 탐색 방식으로 순회한다.

```cpp

#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
#define MAX 98765432
//행마다 경우의 수는 약품 처리를 안하는경우, A로하는 경우, B로 하는경우 이렇게 3가지이다.
int film[13][20] = { {0, }, };
int T, D, W, K, answer = MAX;// 약품 투입 최소 횟수

bool pass_check()
{
	for (int i = 0; i < W; i++)
	{
		int passcnt = 1;
		int start = film[0][i];

		for (int j = 1; j < D; j++)
		{
			if (film[j][i] == start)
			{
				passcnt++;
				if (passcnt == K)
					break;
			}
			else
			{
				passcnt = 1;
				start = film[j][i];
			}
		}
		//한줄이라도 통과 못할 시 불합격
		if (passcnt != K)
			return false;
	}
	return true;
}
void dfs(int idx, int cnt)
{
	int temp_line[20] = {0,};
	if (cnt >= answer)
		return;
	
	if (pass_check())
	{
		if (cnt < answer)
			answer = cnt;
		return;
	}
	if (idx == D)
		return;


	dfs(idx + 1, cnt); // 약품 처리 안하는 경우

	for (int i = 0; i < W; i++)
	{
		temp_line[i] = film[idx][i]; // 데이터 백업
	}
    
    for(int i = 0; i < W; i++)
    {
        film[idx][i] = 0;
    }
	dfs(idx + 1, cnt + 1); // 약품처리를 A(0)로 하는 경우
	for(int i = 0; i < W; i++)
    {
        film[idx][i] = 1;
    }

	dfs(idx + 1, cnt + 1); // 약품 처리를 B(1)로 하는 경우

	for (int i = 0; i < W; i++)
	{
		film[idx][i] = temp_line[i]; // 데이터 복구
	}

}
int main(int argc, char** argv)
{
	int tc;
	

	scanf("%d", &T);

	for (tc = 1; tc <= T; ++tc)
	{
		answer = MAX;
		scanf("%d %d %d", &D, &W, &K);// D 보호 필름 두께, W 보호 필름 가로 두께, K 합격 기준

		for (int i = 0; i < D; i++)
		{
			for (int j = 0; j < W; j++)
			{
				scanf("%d", &film[i][j]); // A는 0, B는 1
			}
		}


		dfs(0, 0);
		printf("#%d %d\n", tc, answer);

	}
	return 0;//정상종료시 반드시 0을 리턴해야합니다.
}
```